name: Sync Google Sheet CSV

on:
  schedule:
    # Runs every 1 hour (你可以根据需要调整频率)
    - cron: '0 * * * *'
  workflow_dispatch:
    # 允许手动触发此工作流

jobs:
  sync_data:
    runs-on: ubuntu-latest
    # >>> 添加这一行和下面的子项
    permissions:
      contents: write # 明确授予对仓库内容的写入权限
    # <<<

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Fetch Google Sheet CSV
      id: fetch_csv
      run: |
        GOOGLE_SHEET_CSV_URL="${{ vars.GOOGLE_SHEET_CSV_URL || 'https://docs.google.com/spreadsheets/d/e/2PAC-1vQJ__EJVsqIpDJbdyKPh8nwpyd0GUdwm-Ivdl4rsD_-k9oruRccECXHwigtJOrOaIt8LtcNwEP3OxUY/pub?gid=0&single=true&output=csv' }}"
        
        # 定义保存CSV的文件路径
        CSV_FILE_PATH="data/your_data.csv" # 你可以自定义这个路径和文件名
        
        mkdir -p data # 确保目录存在
        
        curl -L "$GOOGLE_SHEET_CSV_URL" -o "$CSV_FILE_PATH"

        # 检查是否成功下载
        if [ ! -f "$CSV_FILE_PATH" ]; then
          echo "Error: CSV file was not downloaded."
          exit 1
        fi
        echo "CSV downloaded to $CSV_FILE_PATH"

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Commit and push if changes exist
      run: |
        git add .
        # 检查是否有实际的更改，避免空提交
        if ! git diff-index --quiet HEAD; then
          git commit -m "Update data from Google Sheet [skip ci]"
          git push
        else
          echo "No changes in CSV file. Skipping commit."
        fi
      env:
        # 使用内置的 GITHUB_TOKEN，因为我们已经在 permissions 中授予了它写入权限
        # 如果你仍然想使用自己创建的 GH_TOKEN，也可以继续保留这一行，但请确保它的权限是正确的
        # 推荐先尝试使用内置 token + permissions 解决。
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        # 注意：这里是 secrets.GITHUB_TOKEN，这是 GitHub 提供的内置秘钥，不是你自定义的 GH_TOKEN
        # 如果你之前使用的是 secrets.GH_TOKEN 并且确定它是你手动创建的 Personal Access Token，
        # 那么你可以尝试将 env 这一行删除，让 git push 默认使用内置的 GITHUB_TOKEN，
        # 并依赖上面添加的 permissions 配置来授予权限。
        # 最稳妥的方法是：
        # 1. 移除 env: GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 这一行
        # 2. 确保在 jobs.sync_data 下添加了 permissions: contents: write
        # 这样 git push 会使用内置的 GITHUB_TOKEN，并且它现在拥有了写入权限。
